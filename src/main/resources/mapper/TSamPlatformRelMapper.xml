<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.sam.dao.TSamPlatformRelMapper" >
  <resultMap id="BaseResultMap" type="com.ai.sam.domain.TSamPlatformRel" >
    <id column="REL_ID" property="relId" jdbcType="VARCHAR" />
    <result column="STAFF_ID" property="staffId" jdbcType="VARCHAR" />
    <result column="PLATFORM_ID" property="platformId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="BaseMap" type="java.util.Map" >
    <id column="REL_ID" property="relId" jdbcType="VARCHAR" />
    <result column="STAFF_ID" property="staffId" jdbcType="VARCHAR" />
    <result column="PLATFORM_ID" property="platformId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="PlatformMap" type="java.util.Map" >
    <result column="PLATFORM_ID" property="platformId" jdbcType="VARCHAR" />
    <result column="ACCOUNT_NAME" property="accountName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    REL_ID, STAFF_ID, PLATFORM_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.sam.domain.TSamPlatformRelExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_sam_platform_rel
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_sam_platform_rel
    where REL_ID = #{relId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_sam_platform_rel
    where REL_ID = #{relId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.sam.domain.TSamPlatformRelExample" >
    delete from t_sam_platform_rel
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.sam.domain.TSamPlatformRel" >
    insert into t_sam_platform_rel (REL_ID, STAFF_ID, PLATFORM_ID
      )
    values (#{relId,jdbcType=VARCHAR}, #{staffId,jdbcType=VARCHAR}, #{platformId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ai.sam.domain.TSamPlatformRel" >
    insert into t_sam_platform_rel
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="relId != null" >
        REL_ID,
      </if>
      <if test="staffId != null" >
        STAFF_ID,
      </if>
      <if test="platformId != null" >
        PLATFORM_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="relId != null" >
        #{relId,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=VARCHAR},
      </if>
      <if test="platformId != null" >
        #{platformId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.sam.domain.TSamPlatformRelExample" resultType="java.lang.Integer" >
    select count(*) from t_sam_platform_rel
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_sam_platform_rel
    <set >
      <if test="record.relId != null" >
        REL_ID = #{record.relId,jdbcType=VARCHAR},
      </if>
      <if test="record.staffId != null" >
        STAFF_ID = #{record.staffId,jdbcType=VARCHAR},
      </if>
      <if test="record.platformId != null" >
        PLATFORM_ID = #{record.platformId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_sam_platform_rel
    set REL_ID = #{record.relId,jdbcType=VARCHAR},
      STAFF_ID = #{record.staffId,jdbcType=VARCHAR},
      PLATFORM_ID = #{record.platformId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.sam.domain.TSamPlatformRel" >
    update t_sam_platform_rel
    <set >
      <if test="staffId != null" >
        STAFF_ID = #{staffId,jdbcType=VARCHAR},
      </if>
      <if test="platformId != null" >
        PLATFORM_ID = #{platformId,jdbcType=VARCHAR},
      </if>
    </set>
    where REL_ID = #{relId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.sam.domain.TSamPlatformRel" >
    update t_sam_platform_rel
    set STAFF_ID = #{staffId,jdbcType=VARCHAR},
      PLATFORM_ID = #{platformId,jdbcType=VARCHAR}
    where REL_ID = #{relId,jdbcType=VARCHAR}
  </update>

  <!--<select id="getStaffPlatformRel" resultMap="BaseMap" parameterType="java.util.Map" >-->
    <!--select t1.STAFF_ID,t1.PLATFORM_ID-->
    <!--FROM t_sam_platform_rel t1-->
    <!--where  t1.STAFF_ID =#{staffId}-->
  <!--</select>-->
  <select id="getStaffPlatformRel" resultMap="PlatformMap" parameterType="java.util.Map" >
    select t1.STAFF_ID,t1.PLATFORM_ID,t2.ACCOUNT_NAME
    FROM t_sam_platform_rel t1
    left join ir_platform_account t2
    on t1.PLATFORM_ID =t2.PLATFORM_ID
    where  t1.STAFF_ID =#{staffId}
  </select>
  <select id="qryNoDistriPlatform" resultMap="PlatformMap" parameterType="java.util.Map" >
    select t2.PLATFORM_ID,t2.ACCOUNT_NAME
    FROM ir_platform_account t2
    where  t2.PLATFORM_ID not in (select t1.PLATFORM_ID from t_sam_platform_rel t1)
    and t2.ACCOUNT_STATE=1 and t2.isDelete=0
    <if test="platformId != null &amp; platformId != ''">
      AND t2.PLATFORM_ID like CONCAT('%',#{platformId},'%')
    </if>
    <if test="accountName != null &amp; accountName != ''">
      AND t2.ACCOUNT_NAME like CONCAT('%',#{accountName},'%')
    </if>
    <if test="platIdMin != null &amp; platIdMin != ''">
      and t2.PLATFORM_ID &gt;= #{platIdMin}
    </if>
    <if test="platIdMax != null &amp; platIdMax != ''">
      and t2.PLATFORM_ID &lt;= #{platIdMax}
    </if>
    <if test="limit != null and limit != '' " >
      limit ${start},${limit}
    </if>
  </select>

  <select id="qryNoDistriPlatformCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
    select COUNT(t2.PLATFORM_ID)
    FROM ir_platform_account t2
    where  t2.PLATFORM_ID not in (select t1.PLATFORM_ID from t_sam_platform_rel t1)
    and t2.ACCOUNT_STATE=1 and t2.isDelete=0
    <if test="platformId != null &amp; platformId != ''">
      AND t2.PLATFORM_ID like CONCAT('%',#{platformId},'%')
    </if>
    <if test="platIdMin != null &amp; platIdMin != ''">
      and t2.PLATFORM_ID &gt;= #{platIdMin}
    </if>
    <if test="platIdMax != null &amp; platIdMax != ''">
      and t2.PLATFORM_ID &lt;= #{platIdMax}
    </if>
  </select>

  <delete id="deleteStaffPlatform" parameterType="java.util.Map" >
    delete from t_sam_platform_rel where STAFF_ID =#{staffId}
  </delete>
  <insert id="saveStaffPlatform" parameterType="java.util.Map" >
    insert into t_sam_platform_rel (REL_ID, STAFF_ID, PLATFORM_ID
      )
    values (#{relId,jdbcType=VARCHAR}, #{staffId,jdbcType=VARCHAR}, #{platformId,jdbcType=VARCHAR}
      )
  </insert>
</mapper>